[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "routefinder"
version = "0.1.0"
description = "Towards Foundation Models for Vehicle Routing Problems"
authors = [
    "Federico Berto <berto.federico2@gmail.com>",
    "Chuanbo Hua <cbhua@kaist.ac.kr>",
    "Nayeli Gast Zepeda <nayeli.gast@uni-bielefeld.de>",
    "Andre Hottung",
    "Leon Lan",
    "Niels Wouda",
    "Kevin Tierney",
    "Jinkyoo Park",
]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
rl4co = { git = "https://github.com/ai4co/rl4co.git", branch = "main" }
pyvrp = { version = "^0.9.1", optional = true }
ortools = { version = "^9.10.4067", optional = true }
# lkh = { git = "git@github.com:leonlan/pylkh.git", rev = "7ba9965", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
black = "^23.3.0"
ruff = "^0.1.6"
pre-commit = "^3.3.3"

[tool.poetry.extras]
graph = ["torch_geometric"]
testing = ["pytest", "pytest-cov"]
solvers = ["pyvrp", "ortools"]
all = ["graph", "testing", "solvers", "dev"]

[tool.ruff]
select = ["F", "E", "W", "I001"]
line-length = 90
show-fixes = false
target-version = "py311"
task-tags = ["TODO", "FIXME"]
ignore = ["E501"] # never enforce `E501` (line length violations), done in Black

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.isort]
known-first-party = []
known-third-party = []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
combine-as-imports = true
split-on-trailing-comma = false
lines-between-types = 1

[tool.black]
line-length = 90
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.direnv
    | \.eggs
    | \.git
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | venv
  )/
)
'''

[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Lines to exclude from coverage report (e.g., comments, debug statements)
    "pragma: no cover",
    "if __name__ == .__main__.:",
]
